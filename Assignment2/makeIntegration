#
# example Makefile to build an executable named myprog from myprog.cpp
#
PROG=numIntegration
RM=rm all

all: $(PROG).cpp
	@g++ -std=c++11 -Wall -pthread $(PROG).cpp -o $(PROG)

	#./$(PROG) -h

	@echo "\n";\
	
	@echo "Results of $(PROG) with 1 thread(s) and 1000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 1 1000

	@echo "Results of $(PROG) with 1 thread(s) and 10000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 1 10000

	@echo "Results of $(PROG) with 1 thread(s) and 1000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 1 1000000

	@echo "Results of $(PROG) with 1 thread(s) and 10000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 1 10000000

	@echo "\n";\
	
	@echo "Results of $(PROG) with 2 thread(s) and 1000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 2 1000

	@echo "Results of $(PROG) with 2 thread(s) and 10000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 2 10000

	@echo "Results of $(PROG) with 2 thread(s) and 1000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 2 1000000

	@echo "Results of $(PROG) with 2 thread(s) and 10000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 2 10000000

	@echo "\n";\
	
	@echo "Results of $(PROG) with 4 thread(s) and 1000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 4 1000

	@echo "Results of $(PROG) with 4 thread(s) and 10000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 4 10000

	@echo "Results of $(PROG) with 4 thread(s) and 1000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 4 1000000

	@echo "Results of $(PROG) with 4 thread(s) and 10000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 4 10000000

	@echo "\n";\
	
	@echo "Results of $(PROG) with 8 thread(s) and 1000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 8 1000

	@echo "Results of $(PROG) with 8 thread(s) and 10000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 8 10000

	@echo "Results of $(PROG) with 8 thread(s) and 1000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 8 1000000

	@echo "Results of $(PROG) with 8 thread(s) and 10000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 8 10000000

	@echo "\n";\
	
	@echo "Results of $(PROG) with 16 thread(s) and 1000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 16 1000

	@echo "Results of $(PROG) with 16 thread(s) and 10000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 16 10000

	@echo "Results of $(PROG) with 16 thread(s) and 1000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 16 1000000

	@echo "Results of $(PROG) with 16 thread(s) and 10000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 16 10000000

	@echo "\n";\
	
	@echo "Results of $(PROG) with 32 thread(s) and 1000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 32 1000

	@echo "Results of $(PROG) with 32 thread(s) and 10000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 32 10000

	@echo "Results of $(PROG) with 32 thread(s) and 1000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 32 1000000

	@echo "Results of $(PROG) with 32 thread(s) and 10000000 trapeze(s) and 1 partition(s)"; \
	./$(PROG) 32 10000000

	@echo "\n";\

	@echo "Results of $(PROG) with 16 thread(s) and 10000 trapeze(s) and 100 partition(s)"; \
	./$(PROG) 16 10000 100

	@echo "Results of $(PROG) with 16 thread(s) and 1000000 trapeze(s) and 100 partition(s)"; \
	./$(PROG) 16 1000000 100

	@echo "Results of $(PROG) with 16 thread(s) and 10000000 trapeze(s) and 100 partition(s)"; \
	./$(PROG) 16 10000000 100

	@echo "\n";\
	

	@echo "Results of $(PROG) with 16 thread(s) and 10000 trapeze(s) and 1000 partition(s)"; \
	./$(PROG) 16 10000 1000

	@echo "Results of $(PROG) with 16 thread(s) and 1000000 trapeze(s) and 1000 partition(s)"; \
	./$(PROG) 16 1000000 1000

	@echo "Results of $(PROG) with 16 thread(s) and 10000000 trapeze(s) and 1000 partition(s)"; \
	./$(PROG) 16 10000000 1000

	@echo "\n";\

	@echo "Results of $(PROG) with 16 thread(s) and 1000000 trapeze(s) and 10000 partition(s)"; \
	./$(PROG) 16 1000000 10000

	@echo "Results of $(PROG) with 16 thread(s) and 10000000 trapeze(s) and 10000 partition(s)"; \
	./$(PROG) 16 10000000 10000

.PHONY: clean
clean:
	$(RM) $(PROG)
